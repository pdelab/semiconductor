# Copyright (C) 2014 CCMA@PSU Maximilian Metti, Xiaozhe Hu
#
#   Define bilinear and linear forms for 
#   the linearized Poisson-Nernst-Planck equations
#
# Compile this form with FFC: ffc -l dolfin NewtonPNP.ufl.



##  Finite Element Space
CG = FiniteElement("Lagrange", tetrahedron, 1)
V  = MixedElement([CG,CG,CG])        # Solution Space


(p, n, phi) = TrialFunction(V)
(u, v, w)   = TestFunction(V)


##  Previous Iterates
pp   = Coefficient(CG)
nn   = Coefficient(CG)
kk   = Coefficient(CG)


##  Coefficient Functions
eps  = Constant(tetrahedron)
Dp   = Constant(tetrahedron)
qp   = Constant(tetrahedron)
mp   = Constant(tetrahedron)
Dn   = Constant(tetrahedron)
qn   = Constant(tetrahedron)
mn   = Constant(tetrahedron)
s1   = Constant(tetrahedron)
s2   = Constant(tetrahedron)


## Source terms for Dirichlet problem
pf   = Coefficient(CG)
nf   = Coefficient(CG)
fc   = Coefficient(CG)

 
a   = ( Dp*exp(pp)*(inner(grad(p),grad(u))))*dx + ( mp*exp(pp)*(p*(inner(grad(pp)+qp*grad(kk),grad(u)))+qp*(inner(grad(phi),grad(u)))) )*dx \
    + ( Dn*exp(nn)*(inner(grad(n),grad(v))))*dx + ( mn*exp(nn)*(n*(inner(grad(nn)+qn*grad(kk),grad(v)))+qn*(inner(grad(phi),grad(v)))) )*dx \
    + (      eps*(inner(grad(phi),grad(w))))*dx - qp*(exp(pp)*p*w)*dx - qn*(exp(nn)*n*w)*dx


L   = -( Dp*exp(pp)*(inner(grad(pp),grad(u))))*dx - qp*( mp*exp(pp)*(inner(grad(kk),grad(u))) )*dx + pf*u*dx \
      -( Dn*exp(nn)*(inner(grad(nn),grad(v))))*dx - qn*( mn*exp(nn)*(inner(grad(kk),grad(v))) )*dx + nf*v*dx \
      -(        eps*(inner(grad(kk),grad(w))))*dx + qp*(exp(pp)*w)*dx + qn*(exp(nn)*w)*dx \
      +(fc*w)*dx + (s1*w)*ds(2) + (s2*w)*ds(3)
